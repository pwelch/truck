// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transfer.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	transfer.proto

It has these top-level messages:
	Request
	Response
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Fetch bool `protobuf:"varint,1,opt,name=fetch" json:"fetch,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetFetch() bool {
	if m != nil {
		return m.Fetch
	}
	return false
}

type Response struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "transfer.Request")
	proto.RegisterType((*Response)(nil), "transfer.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for File service

type FileClient interface {
	FileTransfer(ctx context.Context, in *Request, opts ...grpc.CallOption) (File_FileTransferClient, error)
}

type fileClient struct {
	cc *grpc.ClientConn
}

func NewFileClient(cc *grpc.ClientConn) FileClient {
	return &fileClient{cc}
}

func (c *fileClient) FileTransfer(ctx context.Context, in *Request, opts ...grpc.CallOption) (File_FileTransferClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_File_serviceDesc.Streams[0], c.cc, "/transfer.File/FileTransfer", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileFileTransferClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type File_FileTransferClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type fileFileTransferClient struct {
	grpc.ClientStream
}

func (x *fileFileTransferClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for File service

type FileServer interface {
	FileTransfer(*Request, File_FileTransferServer) error
}

func RegisterFileServer(s *grpc.Server, srv FileServer) {
	s.RegisterService(&_File_serviceDesc, srv)
}

func _File_FileTransfer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileServer).FileTransfer(m, &fileFileTransferServer{stream})
}

type File_FileTransferServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type fileFileTransferServer struct {
	grpc.ServerStream
}

func (x *fileFileTransferServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _File_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transfer.File",
	HandlerType: (*FileServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FileTransfer",
			Handler:       _File_FileTransfer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "transfer.proto",
}

func init() { proto.RegisterFile("transfer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xe4,
	0xb9, 0xd8, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0xd3, 0x52, 0x4b,
	0x92, 0x33, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x82, 0x20, 0x1c, 0x25, 0x15, 0x2e, 0x8e, 0xa0,
	0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6, 0xe4, 0xfc, 0xbc, 0x92, 0xd4,
	0xbc, 0x12, 0xb0, 0x1a, 0x9e, 0x20, 0x18, 0xd7, 0xc8, 0x91, 0x8b, 0xc5, 0x2d, 0x33, 0x27, 0x55,
	0xc8, 0x92, 0x8b, 0x07, 0x44, 0x87, 0x40, 0x8d, 0x17, 0x12, 0xd4, 0x83, 0xdb, 0x0c, 0xb5, 0x46,
	0x4a, 0x08, 0x59, 0x08, 0x62, 0xb0, 0x12, 0x83, 0x01, 0xa3, 0x13, 0x57, 0x14, 0x07, 0xd8, 0x71,
	0x49, 0xa5, 0x69, 0x49, 0x6c, 0x60, 0x96, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x72, 0xa5, 0x57,
	0xe7, 0xb8, 0x00, 0x00, 0x00,
}
